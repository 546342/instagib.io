"use strict";

function Text()
{
    //Xpos, Ypos, Width, Height, Xoffset, Yoffset, OrigW, OrigH
    var large_font =
    [
        0, 0, 0, 0, 14, 56, 14, 56,
        23, 216, 28, 31, 0, 17, 28, 56,
        387, 87, 27, 40, 1, 8, 28, 56,
        112, 250, 25, 31, 0, 17, 25, 56,
        330, 92, 26, 40, 0, 8, 28, 56,
        150, 60, 28, 31, 0, 17, 28, 56,
        270, 92, 14, 40, 0, 7, 14, 56,
        163, 175, 27, 39, 0, 17, 28, 56,
        78, 175, 26, 39, 1, 8, 28, 56,
        11, 175, 9, 39, 1, 8, 11, 56,
        237, 0, 10, 48, 0, 8, 11, 56,
        432, 211, 24, 39, 1, 8, 25, 56,
        0, 134, 8, 39, 1, 8, 11, 56,
        164, 252, 40, 30, 1, 17, 42, 56,
        111, 283, 25, 30, 1, 17, 28, 56,
        0, 249, 28, 31, 0, 17, 28, 56,
        134, 175, 27, 39, 1, 17, 28, 56,
        106, 175, 26, 39, 0, 17, 28, 56,
        494, 284, 16, 30, 1, 17, 17, 56,
        85, 250, 25, 31, 0, 17, 25, 56,
        254, 93, 14, 40, 0, 8, 14, 56,
        58, 249, 25, 31, 1, 17, 28, 56,
        165, 284, 25, 30, 0, 17, 25, 56,
        246, 252, 36, 30, 0, 17, 36, 56,
        84, 283, 25, 30, 0, 17, 25, 56,
        458, 211, 25, 39, 0, 17, 25, 56,
        192, 284, 25, 30, 0, 17, 25, 56,
        365, 130, 33, 39, 0, 8, 33, 56,
        283, 176, 30, 39, 2, 8, 33, 56,
        397, 44, 36, 41, 0, 7, 36, 56,
        225, 135, 33, 39, 2, 8, 36, 56,
        315, 175, 30, 39, 2, 8, 33, 56,
        252, 176, 29, 39, 2, 8, 31, 56,
        473, 43, 37, 41, 1, 7, 39, 56,
        157, 134, 32, 39, 2, 8, 36, 56,
        1, 175, 8, 39, 3, 8, 14, 56,
        305, 92, 23, 40, 0, 8, 25, 56,
        347, 175, 31, 39, 2, 8, 33, 56,
        50, 175, 26, 39, 2, 8, 28, 56,
        472, 128, 38, 39, 2, 8, 42, 56,
        191, 134, 32, 39, 2, 8, 36, 56,
        451, 0, 38, 41, 1, 7, 39, 56,
        446, 170, 31, 39, 2, 8, 33, 56,
        315, 0, 39, 43, 0, 7, 39, 56,
        436, 129, 34, 39, 2, 8, 36, 56,
        363, 44, 32, 41, 0, 7, 33, 56,
        479, 169, 31, 39, 0, 8, 31, 56,
        478, 86, 32, 40, 2, 8, 36, 56,
        260, 135, 33, 39, 0, 8, 33, 56,
        205, 93, 47, 39, 0, 8, 47, 56,
        295, 134, 33, 39, 0, 8, 33, 56,
        330, 134, 33, 39, 0, 8, 33, 56,
        380, 171, 31, 39, 0, 8, 31, 56,
        240, 50, 28, 41, 0, 7, 28, 56,
        286, 92, 17, 40, 4, 7, 28, 56,
        358, 88, 27, 40, 0, 7, 28, 56,
        270, 49, 28, 41, 0, 7, 28, 56,
        192, 175, 28, 39, 0, 8, 28, 56,
        0, 51, 28, 40, 0, 8, 28, 56,
        120, 50, 28, 41, 0, 7, 28, 56,
        222, 176, 28, 39, 0, 8, 28, 56,
        210, 50, 28, 41, 0, 7, 28, 56,
        180, 50, 28, 41, 0, 7, 28, 56,
        483, 305, 9, 9, 3, 38, 14, 56,
        318, 237, 9, 16, 2, 38, 14, 56,
        10, 134, 10, 39, 2, 8, 14, 56,
        416, 87, 27, 40, 0, 7, 28, 56,
        298, 489, 17, 9, 0, 28, 17, 56,
        256, 378, 27, 27, 1, 14, 29, 56,
        104, 50, 14, 41, 0, 7, 14, 56,
        491, 0, 14, 41, 0, 7, 14, 56,
        0, 0, 16, 49, 1, 7, 17, 56,
        18, 0, 16, 49, 1, 7, 17, 56,
        483, 284, 9, 30, 3, 17, 14, 56,
        318, 216, 9, 37, 2, 17, 14, 56,
        461, 497, 28, 6, 0, 50, 28, 56,
        36, 0, 7, 49, 3, 7, 13, 56,
        356, 0, 43, 42, 1, 7, 45, 56,
        167, 429, 27, 19, 1, 18, 29, 56,
        223, 0, 12, 48, 2, 8, 14, 56,
        208, 0, 13, 48, 0, 8, 14, 56,
        59, 315, 27, 28, 1, 14, 29, 56,
        30, 314, 27, 28, 1, 14, 29, 56,
        462, 487, 28, 7, 0, 29, 28, 56,
        329, 489, 50, 7, 0, 29, 50, 56,
        23, 216, 28, 31, 0, 17, 28, 56,
        300, 49, 29, 41, 0, 7, 29, 56,
        379, 256, 26, 30, 1, 17, 27, 56,
        298, 284, 17, 30, 1, 17, 18, 56,
        359, 216, 29, 38, 0, 17, 29, 56,
        150, 60, 28, 31, 0, 17, 28, 56,
        150, 50, 28, 41, 0, 7, 28, 56,
        445, 252, 34, 30, 0, 17, 34, 56,
        139, 251, 23, 31, 0, 17, 23, 56,
        28, 282, 26, 30, 1, 17, 28, 56,
        22, 175, 26, 39, 1, 8, 28, 56,
        0, 216, 21, 30, 1, 17, 22, 56,
        481, 252, 28, 30, 0, 17, 29, 56,
        411, 252, 32, 30, 1, 17, 34, 56,
        0, 282, 26, 30, 1, 17, 28, 56,
        0, 249, 28, 31, 0, 17, 28, 56,
        246, 284, 25, 30, 1, 17, 27, 56,
        134, 175, 27, 39, 1, 17, 28, 56,
        112, 250, 25, 31, 0, 17, 25, 56,
        273, 284, 23, 30, 0, 17, 23, 56,
        458, 211, 25, 39, 0, 17, 25, 56,
        92, 0, 41, 48, 0, 8, 41, 56,
        84, 283, 25, 30, 0, 17, 25, 56,
        329, 216, 28, 38, 1, 17, 29, 56,
        219, 284, 25, 30, 0, 17, 26, 56,
        206, 252, 38, 30, 1, 17, 40, 56,
        390, 212, 40, 38, 1, 17, 41, 56,
        318, 256, 31, 30, 0, 17, 31, 56,
        284, 252, 32, 30, 2, 17, 36, 56,
        138, 284, 25, 30, 1, 17, 26, 56,
        30, 249, 26, 31, 0, 17, 26, 56,
        53, 216, 37, 31, 1, 17, 38, 56,
        56, 282, 26, 30, 0, 17, 27, 56,
        365, 130, 33, 39, 0, 8, 33, 56,
        56, 134, 31, 39, 2, 8, 33, 56,
        283, 176, 30, 39, 2, 8, 33, 56,
        485, 210, 25, 39, 2, 8, 27, 56,
        172, 0, 34, 48, 0, 8, 34, 56,
        315, 175, 30, 39, 2, 8, 33, 56,
        283, 0, 30, 47, 2, 0, 33, 56,
        157, 93, 46, 39, 0, 8, 46, 56,
        331, 45, 30, 41, 0, 7, 30, 56,
        89, 134, 32, 39, 2, 8, 36, 56,
        249, 0, 32, 47, 2, 0, 36, 56,
        0, 93, 27, 39, 2, 8, 29, 56,
        445, 86, 31, 40, 0, 8, 33, 56,
        472, 128, 38, 39, 2, 8, 42, 56,
        157, 134, 32, 39, 2, 8, 36, 56,
        451, 0, 38, 41, 1, 7, 39, 56,
        123, 134, 32, 39, 2, 8, 36, 56,
        446, 170, 31, 39, 2, 8, 33, 56,
        397, 44, 36, 41, 0, 7, 36, 56,
        479, 169, 31, 39, 0, 8, 31, 56,
        30, 51, 32, 40, 0, 8, 32, 56,
        64, 50, 38, 40, 0, 7, 38, 56,
        295, 134, 33, 39, 0, 8, 33, 56,
        413, 170, 31, 39, 0, 8, 33, 56,
        135, 0, 35, 48, 2, 8, 37, 56,
        113, 93, 42, 39, 2, 8, 46, 56,
        45, 0, 45, 48, 2, 8, 47, 56,
        29, 93, 40, 39, 0, 8, 40, 56,
        71, 93, 40, 39, 2, 8, 44, 56,
        23, 134, 31, 39, 2, 8, 33, 56,
        435, 43, 36, 41, 0, 7, 36, 56,
        401, 0, 48, 41, 2, 7, 51, 56,
        400, 129, 34, 39, 0, 8, 36, 56,
    ];

    var medium_font =
    [
        0, 0, 0, 0, 9, 37, 9, 37,
        310, 407, 19, 21, 0, 11, 19, 37,
        424, 375, 19, 28, 0, 4, 19, 37,
        380, 429, 17, 21, 0, 11, 17, 37,
        445, 376, 19, 28, 0, 4, 19, 37,
        424, 405, 19, 21, 0, 11, 19, 37,
        498, 316, 9, 28, 0, 4, 9, 37,
        63, 405, 19, 26, 0, 11, 19, 37,
        277, 348, 19, 28, 0, 4, 19, 37,
        220, 376, 7, 28, 0, 4, 7, 37,
        148, 216, 7, 33, 0, 4, 7, 37,
        487, 376, 17, 28, 0, 4, 17, 37,
        247, 376, 7, 28, 0, 4, 7, 37,
        103, 406, 28, 21, 0, 11, 28, 37,
        373, 406, 19, 21, 0, 11, 19, 37,
        331, 407, 19, 21, 0, 11, 19, 37,
        42, 405, 19, 26, 0, 11, 19, 37,
        21, 404, 19, 26, 0, 11, 19, 37,
        240, 430, 11, 21, 0, 11, 11, 37,
        439, 429, 17, 21, 0, 11, 17, 37,
        327, 378, 9, 27, 0, 5, 9, 37,
        445, 406, 19, 21, 0, 11, 19, 37,
        323, 430, 17, 21, 0, 11, 17, 37,
        215, 406, 24, 21, 0, 11, 24, 37,
        458, 429, 17, 21, 0, 11, 17, 37,
        84, 406, 17, 26, 0, 11, 17, 37,
        361, 429, 17, 21, 0, 11, 17, 37,
        439, 345, 22, 28, 0, 4, 22, 37,
        72, 345, 22, 28, 0, 4, 22, 37,
        170, 316, 24, 28, 0, 4, 24, 37,
        221, 316, 23, 28, 1, 4, 24, 37,
        486, 346, 21, 28, 1, 4, 22, 37,
        403, 374, 19, 28, 1, 4, 20, 37,
        415, 314, 26, 28, 0, 4, 26, 37,
        367, 318, 22, 28, 1, 4, 24, 37,
        238, 376, 7, 28, 1, 4, 9, 37,
        165, 376, 16, 28, 0, 4, 17, 37,
        391, 318, 22, 28, 0, 4, 22, 37,
        126, 376, 18, 28, 1, 4, 19, 37,
        88, 315, 26, 28, 1, 4, 28, 37,
        343, 318, 22, 28, 1, 4, 24, 37,
        443, 315, 26, 28, 0, 4, 26, 37,
        119, 346, 21, 28, 1, 4, 22, 37,
        351, 256, 26, 30, 0, 4, 26, 37,
        196, 316, 23, 28, 1, 4, 24, 37,
        319, 318, 22, 28, 0, 4, 22, 37,
        255, 346, 20, 28, 0, 4, 20, 37,
        24, 344, 22, 28, 1, 4, 24, 37,
        0, 344, 22, 28, 0, 4, 22, 37,
        317, 288, 32, 28, 0, 4, 32, 37,
        271, 316, 22, 28, 0, 4, 22, 37,
        48, 345, 22, 28, 0, 4, 22, 37,
        233, 346, 20, 28, 0, 4, 20, 37,
        63, 375, 19, 28, 0, 4, 19, 37,
        183, 376, 13, 28, 2, 4, 19, 37,
        84, 376, 19, 28, 0, 4, 19, 37,
        105, 376, 19, 28, 0, 4, 19, 37,
        466, 376, 19, 28, 0, 4, 19, 37,
        285, 378, 19, 27, 0, 5, 19, 37,
        21, 374, 19, 28, 0, 4, 19, 37,
        306, 378, 19, 27, 0, 5, 19, 37,
        319, 348, 19, 28, 0, 4, 19, 37,
        298, 348, 19, 28, 0, 4, 19, 37,
        403, 362, 7, 7, 1, 25, 9, 37,
        390, 392, 7, 12, 1, 25, 9, 37,
        229, 376, 7, 28, 1, 4, 9, 37,
        382, 348, 19, 28, 0, 4, 19, 37,
        492, 487, 11, 7, 0, 18, 11, 37,
        145, 429, 20, 19, 0, 9, 20, 37,
        198, 376, 9, 28, 0, 4, 9, 37,
        209, 376, 9, 28, 0, 4, 9, 37,
        192, 216, 11, 33, 0, 4, 11, 37,
        179, 216, 11, 33, 0, 4, 11, 37,
        403, 348, 7, 21, 1, 11, 9, 37,
        390, 378, 7, 26, 1, 11, 9, 37,
        329, 498, 19, 4, 0, 33, 19, 37,
        139, 216, 7, 33, 1, 4, 9, 37,
        451, 284, 30, 29, 0, 4, 30, 37,
        61, 471, 20, 14, 0, 11, 20, 37,
        157, 216, 9, 33, 0, 4, 9, 37,
        168, 216, 9, 33, 0, 4, 9, 37,
        218, 429, 20, 20, 0, 8, 20, 37,
        196, 429, 20, 20, 0, 8, 20, 37,
        491, 496, 19, 7, 0, 18, 19, 37,
        427, 488, 33, 7, 0, 18, 33, 37,
        310, 407, 19, 21, 0, 11, 19, 37,
        361, 348, 19, 28, 0, 4, 19, 37,
        466, 406, 18, 21, 0, 11, 18, 37,
        496, 429, 12, 21, 0, 11, 12, 37,
        368, 378, 20, 26, 0, 11, 20, 37,
        424, 405, 19, 21, 0, 11, 19, 37,
        0, 374, 19, 28, 0, 4, 19, 37,
        241, 407, 22, 21, 0, 11, 22, 37,
        270, 430, 15, 21, 0, 11, 15, 37,
        352, 406, 19, 21, 0, 11, 19, 37,
        340, 348, 19, 28, 0, 4, 19, 37,
        253, 430, 15, 21, 0, 11, 15, 37,
        288, 407, 20, 21, 0, 11, 20, 37,
        399, 404, 23, 21, 0, 11, 23, 37,
        399, 427, 18, 21, 0, 11, 18, 37,
        331, 407, 19, 21, 0, 11, 19, 37,
        419, 428, 18, 21, 0, 11, 18, 37,
        42, 405, 19, 26, 0, 11, 19, 37,
        380, 429, 17, 21, 0, 11, 17, 37,
        287, 430, 15, 21, 0, 11, 15, 37,
        84, 406, 17, 26, 0, 11, 17, 37,
        256, 217, 28, 33, 0, 4, 28, 37,
        458, 429, 17, 21, 0, 11, 17, 37,
        0, 404, 19, 26, 0, 11, 19, 37,
        477, 429, 17, 21, 0, 11, 17, 37,
        133, 406, 27, 21, 0, 11, 27, 37,
        338, 378, 28, 26, 0, 11, 28, 37,
        265, 407, 21, 21, 0, 11, 21, 37,
        189, 406, 24, 21, 0, 11, 24, 37,
        342, 430, 17, 21, 0, 11, 17, 37,
        304, 430, 17, 21, 0, 11, 17, 37,
        162, 406, 25, 21, 0, 11, 25, 37,
        486, 406, 18, 21, 0, 11, 18, 37,
        439, 345, 22, 28, 0, 4, 22, 37,
        96, 346, 21, 28, 1, 4, 22, 37,
        72, 345, 22, 28, 0, 4, 22, 37,
        146, 376, 17, 28, 1, 4, 18, 37,
        205, 217, 23, 33, 0, 4, 23, 37,
        486, 346, 21, 28, 1, 4, 22, 37,
        92, 216, 21, 32, 1, 0, 22, 37,
        351, 288, 31, 28, 0, 4, 31, 37,
        211, 346, 20, 28, 0, 4, 20, 37,
        295, 318, 22, 28, 1, 4, 24, 37,
        115, 216, 22, 32, 1, 0, 24, 37,
        42, 375, 19, 28, 1, 4, 20, 37,
        165, 346, 21, 28, 0, 4, 22, 37,
        88, 315, 26, 28, 1, 4, 28, 37,
        367, 318, 22, 28, 1, 4, 24, 37,
        443, 315, 26, 28, 0, 4, 26, 37,
        415, 344, 22, 28, 1, 4, 24, 37,
        119, 346, 21, 28, 1, 4, 22, 37,
        170, 316, 24, 28, 0, 4, 24, 37,
        255, 346, 20, 28, 0, 4, 20, 37,
        142, 346, 21, 28, 0, 4, 21, 37,
        471, 316, 25, 28, 0, 4, 25, 37,
        271, 316, 22, 28, 0, 4, 22, 37,
        463, 346, 21, 28, 0, 4, 22, 37,
        230, 217, 24, 33, 1, 4, 25, 37,
        384, 288, 29, 28, 1, 4, 31, 37,
        286, 217, 30, 33, 1, 4, 31, 37,
        116, 316, 26, 28, 0, 4, 26, 37,
        0, 314, 28, 28, 1, 4, 30, 37,
        188, 346, 21, 28, 1, 4, 22, 37,
        144, 316, 24, 28, 0, 4, 24, 37,
        416, 284, 33, 28, 1, 4, 34, 37,
        246, 316, 23, 28, 0, 4, 24, 37,
    ];

    var small_font =
    [
        0, 0, 0, 0, 5, 19, 5, 19,
        141, 486, 9, 13, 0, 4, 9, 19,
        401, 468, 9, 16, 0, 1, 9, 19,
        389, 486, 8, 13, 0, 4, 8, 19,
        254, 471, 9, 16, 0, 1, 9, 19,
        60, 488, 9, 13, 0, 4, 9, 19,
        95, 434, 5, 16, 0, 1, 5, 19,
        492, 470, 9, 15, 0, 4, 9, 19,
        276, 471, 9, 16, 0, 1, 9, 19,
        423, 469, 4, 16, 0, 1, 4, 19,
        506, 396, 4, 18, 0, 1, 4, 19,
        331, 471, 8, 16, 0, 1, 8, 19,
        435, 470, 4, 16, 0, 1, 4, 19,
        0, 470, 14, 13, 0, 4, 14, 19,
        27, 488, 9, 13, 0, 4, 9, 19,
        49, 488, 9, 13, 0, 4, 9, 19,
        481, 470, 9, 15, 0, 4, 9, 19,
        93, 471, 9, 15, 0, 4, 9, 19,
        247, 489, 6, 13, 0, 4, 6, 19,
        399, 486, 8, 13, 0, 4, 8, 19,
        368, 470, 5, 16, 0, 1, 5, 19,
        152, 486, 9, 13, 0, 4, 9, 19,
        409, 487, 8, 13, 0, 4, 8, 19,
        46, 472, 12, 13, 0, 4, 12, 19,
        207, 487, 8, 13, 0, 4, 8, 19,
        83, 471, 8, 15, 0, 4, 8, 19,
        227, 489, 8, 13, 0, 4, 8, 19,
        77, 453, 11, 16, 0, 1, 11, 19,
        468, 452, 11, 16, 0, 1, 11, 19,
        348, 453, 12, 16, 0, 1, 12, 19,
        320, 453, 12, 16, 0, 1, 12, 19,
        0, 452, 11, 16, 0, 1, 11, 19,
        141, 468, 10, 16, 0, 1, 10, 19,
        220, 451, 13, 16, 0, 1, 13, 19,
        362, 452, 12, 16, 0, 1, 12, 19,
        382, 470, 5, 16, 0, 1, 5, 19,
        351, 471, 8, 16, 0, 1, 8, 19,
        429, 452, 11, 16, 0, 1, 11, 19,
        265, 471, 9, 16, 0, 1, 9, 19,
        204, 451, 14, 16, 0, 1, 14, 19,
        306, 453, 12, 16, 0, 1, 12, 19,
        399, 450, 13, 16, 0, 1, 13, 19,
        90, 453, 11, 16, 0, 1, 11, 19,
        66, 434, 13, 17, 0, 1, 13, 19,
        250, 453, 12, 16, 0, 1, 12, 19,
        494, 452, 11, 16, 0, 1, 11, 19,
        39, 454, 10, 16, 0, 1, 10, 19,
        376, 452, 12, 16, 0, 1, 12, 19,
        64, 453, 11, 16, 0, 1, 11, 19,
        135, 450, 16, 16, 0, 1, 16, 19,
        455, 452, 11, 16, 0, 1, 11, 19,
        442, 452, 11, 16, 0, 1, 11, 19,
        129, 468, 10, 16, 0, 1, 10, 19,
        298, 471, 9, 16, 0, 1, 9, 19,
        341, 471, 8, 16, 0, 1, 9, 19,
        320, 471, 9, 16, 0, 1, 9, 19,
        309, 471, 9, 16, 0, 1, 9, 19,
        287, 471, 9, 16, 0, 1, 9, 19,
        221, 469, 9, 16, 0, 1, 9, 19,
        199, 469, 9, 16, 0, 1, 9, 19,
        188, 469, 9, 16, 0, 1, 9, 19,
        177, 469, 9, 16, 0, 1, 9, 19,
        210, 469, 9, 16, 0, 1, 9, 19,
        255, 496, 5, 6, 0, 11, 5, 19,
        503, 477, 5, 8, 0, 11, 5, 19,
        429, 470, 4, 16, 0, 1, 4, 19,
        412, 469, 9, 16, 0, 1, 9, 19,
        381, 488, 6, 6, 0, 8, 6, 19,
        262, 489, 10, 12, 0, 3, 10, 19,
        361, 471, 5, 16, 0, 1, 5, 19,
        375, 470, 5, 16, 0, 1, 5, 19,
        103, 429, 6, 18, 0, 1, 6, 19,
        27, 432, 6, 18, 0, 1, 6, 19,
        255, 489, 5, 13, 0, 4, 5, 19,
        503, 470, 5, 15, 0, 4, 5, 19,
        350, 498, 9, 3, 0, 16, 9, 19,
        506, 376, 4, 18, 0, 1, 4, 19,
        49, 434, 15, 17, 0, 1, 15, 19,
        317, 489, 10, 9, 0, 5, 10, 19,
        35, 432, 5, 18, 0, 1, 5, 19,
        42, 434, 5, 18, 0, 1, 5, 19,
        286, 489, 10, 12, 0, 3, 10, 19,
        274, 489, 10, 12, 0, 3, 10, 19,
        431, 497, 9, 5, 0, 8, 9, 19,
        442, 497, 17, 5, 0, 8, 17, 19,
        141, 486, 9, 13, 0, 4, 9, 19,
        104, 468, 10, 16, 0, 1, 10, 19,
        196, 487, 9, 13, 0, 4, 9, 19,
        419, 487, 6, 13, 0, 4, 6, 19,
        469, 470, 10, 15, 0, 4, 10, 19,
        60, 488, 9, 13, 0, 4, 9, 19,
        390, 468, 9, 16, 0, 1, 9, 19,
        14, 485, 11, 13, 0, 4, 11, 19,
        217, 487, 8, 13, 0, 4, 8, 19,
        185, 487, 9, 13, 0, 4, 9, 19,
        232, 471, 9, 16, 0, 1, 9, 19,
        390, 452, 7, 13, 0, 4, 7, 19,
        104, 486, 10, 13, 0, 4, 10, 19,
        116, 485, 11, 13, 0, 4, 11, 19,
        93, 488, 9, 13, 0, 4, 9, 19,
        49, 488, 9, 13, 0, 4, 9, 19,
        174, 487, 9, 13, 0, 4, 9, 19,
        481, 470, 9, 15, 0, 4, 9, 19,
        389, 486, 8, 13, 0, 4, 8, 19,
        237, 489, 8, 13, 0, 4, 8, 19,
        83, 471, 8, 15, 0, 4, 8, 19,
        111, 429, 14, 18, 0, 1, 14, 19,
        207, 487, 8, 13, 0, 4, 8, 19,
        457, 470, 10, 15, 0, 4, 10, 19,
        38, 488, 9, 13, 0, 4, 9, 19,
        31, 472, 13, 13, 0, 4, 13, 19,
        441, 470, 14, 15, 0, 4, 14, 19,
        129, 486, 10, 13, 0, 4, 10, 19,
        0, 485, 12, 13, 0, 4, 12, 19,
        163, 486, 9, 13, 0, 4, 9, 19,
        71, 488, 9, 13, 0, 4, 9, 19,
        16, 470, 13, 13, 0, 4, 13, 19,
        82, 488, 9, 13, 0, 4, 9, 19,
        77, 453, 11, 16, 0, 1, 11, 19,
        481, 452, 11, 16, 0, 1, 11, 19,
        468, 452, 11, 16, 0, 1, 11, 19,
        243, 471, 9, 16, 0, 1, 9, 19,
        14, 432, 11, 18, 0, 1, 11, 19,
        0, 452, 11, 16, 0, 1, 11, 19,
        103, 449, 11, 17, 0, 0, 11, 19,
        153, 450, 15, 16, 0, 1, 15, 19,
        153, 468, 10, 16, 0, 1, 10, 19,
        292, 453, 12, 16, 0, 1, 12, 19,
        81, 434, 12, 17, 0, 0, 12, 19,
        165, 468, 10, 16, 0, 1, 10, 19,
        26, 452, 11, 16, 0, 1, 11, 19,
        204, 451, 14, 16, 0, 1, 14, 19,
        362, 452, 12, 16, 0, 1, 12, 19,
        399, 450, 13, 16, 0, 1, 13, 19,
        278, 453, 12, 16, 0, 1, 12, 19,
        90, 453, 11, 16, 0, 1, 11, 19,
        348, 453, 12, 16, 0, 1, 12, 19,
        39, 454, 10, 16, 0, 1, 10, 19,
        116, 467, 11, 16, 0, 1, 11, 19,
        235, 453, 13, 16, 0, 1, 13, 19,
        455, 452, 11, 16, 0, 1, 11, 19,
        13, 452, 11, 16, 0, 1, 11, 19,
        0, 432, 12, 18, 0, 1, 12, 19,
        170, 450, 15, 16, 0, 1, 15, 19,
        127, 429, 16, 18, 0, 1, 16, 19,
        414, 451, 13, 16, 0, 1, 13, 19,
        187, 451, 15, 16, 0, 1, 15, 19,
        51, 453, 11, 16, 0, 1, 11, 19,
        264, 453, 12, 16, 0, 1, 12, 19,
        116, 449, 17, 16, 0, 1, 17, 19,
        334, 453, 12, 16, 0, 1, 12, 19,
    ];

    var font_array = [small_font, medium_font, large_font];
    var alfabet = " abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.,!?-+\\/():;_|%=[]><  абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЧЦШЩЪЫЬЭЮЯ";

    var vert = Shader.vertexShader(true, true, "gl_Position");

    var frag = "\n\
    #ifdef GL_ES\n\
    // define default precision for float, vec, mat.\n\
    precision highp float;\n\
    #endif\n\
    \n\
    uniform sampler2D tex_font;\n\
    varying vec4 texcoord;\n\
    uniform vec4 color;\n\
    \n\
    void main()\n\
    {\n\
        vec4 col = clamp(texture2D(tex_font, texcoord.xy) * 2.0, 0.0, 1.0);\n\
        gl_FragColor = col.rgbr * color;\n\
    }\n";

    var visible_frag = "\n\
    #ifdef GL_ES\n\
    // define default precision for float, vec, mat.\n\
    precision highp float;\n\
    #endif\n\
    \n\
    uniform sampler2D tex_font;\n\
    uniform sampler2D tex_visible;\n\
    varying vec4 texcoord;\n\
    uniform vec4 color;\n\
    \n\
    void main()\n\
    {\n\
        vec4 vis = texture2D(tex_visible, texcoord.zw);\n\
        vec4 col = clamp(texture2D(tex_font, texcoord.xy) * 2.0, 0.0, 1.0);\n\
        col *= 1.0 - vis.r;\n\
        gl_FragColor = col.rgbr * color;\n\
    }\n";

    var sh_font = new Shader(vert, frag,
    [
        "mat_pos", "mat_tex", "tex_font", "color",
    ]);
    var sh_visible_font = new Shader(vert, visible_frag,
    [
        "mat_pos", "mat_tex", "tex_font", "color", "tex_visible",
    ]);
    var tex_font = new Texture("textures/font.png");
    var tex_crown = new Texture("textures/HUD/crown.png");

    this.ready = function()
    {
        return tex_font.ready() && tex_crown.ready();
    }
    //vec &pos, float size, char *str, bool center, int f
    this.render = function(pos, size, str, fnt, param)
    {
        var tex_font_id = tex_font.getId();
        if (tex_font_id === null)
            return;

        const aspect = canvas.width / canvas.height;
        var center = false;
        var alpha = 1.0;
        var visibile = false;
        if (param)
        {
            if (param.center !== undefined) center = param.center;
            if (param.alpha !== undefined) alpha = param.alpha;
            if (param.visibile !== undefined) visibile = param.visibile;
        }

        fnt = fnt === undefined ? 2 : fnt;
        var sh = visibile ? sh_visible_font : sh_font;

        var cur_font = font_array[fnt];
        var cur_pos = [pos[0], pos[1]];

        size *= 0.02;
        var cur_size = [size * 0.01, size * 0.01 * aspect];
        var color = [1, 1, 1, alpha];

        gl.enable(gl.BLEND);
        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);
        sh.use();
        sh.texture(sh.tex_font, tex_font_id, 0);
        if (visibile) sh.texture(sh.tex_visible, LevelRender.tex_visible_id, 1);

        if (center)
        {
            function text_width(str, fnt)
            {
                var ret = 0.0;
                for (var c = 0; c < str.length; c++)
                {
                    if (str[c] === '#')
                    {
                        c++;
                        continue;
                    }
                    var ind = alfabet.indexOf(str[c], 0);
                    if (ind < 0) continue;
                    ind *= 8;
                    var w = fnt[ind + 6] + 2;
                    ret += 2 * w;
                }
                return ret;
            }

            var delta = text_width(str, cur_font) / 2 * cur_size[0];
            cur_pos[0] -= delta;
        }

        var len = str.length;
        for (var i = 0; i < len; i++)
        {
            if (str.charAt(i) === '#')
            {
                i++;
                if (str.charAt(i) === 'r')      { color[0] = 1; color[1] = color[2] = 0.5; }
                else if (str.charAt(i) === 'g') { color[1] = 1; color[0] = color[2] = 0; }
                else if (str.charAt(i) === 'b') { color[2] = 1; color[1] = color[0] = 0.5; }
                else if (str.charAt(i) === 'w') { color[0] = color[1] = color[2] = 1; }
                else if (str.charAt(i) === 'B') { color[0] = color[1] = color[2] = 0; }
                else if (str.charAt(i) === 'y') { color[0] = color[1] = 1; color[2] = 0; }
                else if (str.charAt(i) === 'G') { color[0] = color[1] = color[2] = 0.75; }
                else if (str.charAt(i) === '{')
                {
                    var find_end = str.indexOf('}', i);
                    assert(find_end > 0);
                    var x_str = str.substr(i + 1, find_end - i - 1);
                    cur_pos[0] = parseFloat(x_str);
                    i = find_end;
                    continue;
                }
                else if (str.charAt(i) === 'C')
                {
                    i++;
                    if (str.charAt(i) === '1')      { color[0] = 1; color[1] = color[2] = 0; }
                    else if (str.charAt(i) === '2') { color[0] = 1; color[1] = 1; color[2] = 0; }
                    else if (str.charAt(i) === '3') { color[0] = color[1] = color[2] = 0.75; }

                    var sh_crown = visibile ? HUD.shader_visible_hud : HUD.shader_hud;

                    const crown_size = 0.5 / 12.0;
                    sh_crown.use();
                    sh_crown.texture(sh_crown.tex, tex_crown.getId(), 0);
                    if (visibile) sh_crown.texture(sh_crown.tex_visible, LevelRender.tex_visible_id, 1);
                    sh_crown.vector(sh_crown.color, color);
                    sh_crown.vector(sh_crown.vec_pos, 
                    [
                        cur_pos[0] + 0.5 * crown_size / aspect,
                        cur_pos[1],
                        crown_size / aspect,
                        crown_size
                    ]);
                    sh_crown.vector(sh_crown.rotate90, [0, 0, 0, 0]);
                    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
                    cur_pos[0] += crown_size * 0.7;

                    sh.use();
                    sh.texture(sh.tex_font, tex_font_id, 0);
                    if (visibile) sh.texture(sh.tex_visible, LevelRender.tex_visible_id, 1);
                }
            }
            else if (str.charAt(i) === '\t') i++; // <- WTF???
            else
            {
                var ind = alfabet.indexOf(str.charAt(i), 0);
                if (ind < 0) continue;
                ind *= 8;

                var width = cur_font[ind + 2] + 2;
                var height = cur_font[ind + 3] + 2;
                if (str.charAt(i) === ' ') width = cur_font[ind + 6];
                cur_pos[0] += cur_size[0] * width;

                var m_tex = mat4.create();
                mat4.scal(m_tex, [width / 512.0, height / 512.0]);
                var x = cur_font[ind];
                var y = cur_font[ind + 1];
                
                var mat = mat4.create();
                mat4.trans(mat, [x / width, -y / height]);
                mat4.trans(mat, [0.5, -0.5]);
                mat4.scal(mat, [0.5, 0.5]);
                mat4.mul(m_tex, m_tex, mat);
                
                var dy = 0;
                var temp = [2, 5, 8];
                if ("друфцщДЦЩqypgj".indexOf(str.charAt(i),0) >= 0) dy = temp[fnt];
                var m_pos = mat4.create();
                mat4.trans(m_pos, [cur_pos[0], cur_pos[1] - cur_size[1] * (cur_font[ind + 5] + dy)]);
                mat4.scal(m_pos, [cur_size[0] * width, cur_size[1] * height]);

                sh.matrix(sh.mat_tex, m_tex);
                sh.matrix(sh.mat_pos, m_pos);
                sh.vector(sh.color, color);

                // draw
                if (str.charAt(i) !== ' ') gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
                cur_pos[0] += cur_size[0] * width;
            }
        }
        gl.disable(gl.BLEND);
    }
}